name: Standalone
on:
  push:
    branches:
      - standalone

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install and configure Testspace client
        run: |
          ./fix-hosts.sh && TESTSPACE_URL=$(cat testspace-url)
          curl -s https://testspace-client.s3.amazonaws.com/testspace-linux-dev.tgz | sudo tar -zxvf- -C /usr/local/bin
          testspace config url "$TESTSPACE_URL/s2technologies:testspace.test.ci"
          testspace -v
      - name: Get environment details
        run: printenv > printenv.txt
      - name: Push environment details to result
        run: |
          GITHUB_CHECK_SUITE_ID=`curl -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -H 'Accept: application/vnd.github.antiope-preview+json' -s https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${GITHUB_SHA}/check-suites?app_id=15368 | jq -r '.check_suites[0].id'`
          build_url="https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}/checks?check_suite_id=${GITHUB_CHECK_SUITE_ID}";
          echo $build_url
          echo "message: $CI_COMMIT_MESSAGE"
          echo "message josn: $CI_COMMIT_MESSAGE_JSON"
          CI_COMMIT_MESSAGE=`jq -r ".commits[-1].message" ${GITHUB_EVENT_PATH}`
          case "$CI_COMMIT_MESSAGE" in
            *s2.test.stridespace.com*) export TESTSPACE_TOKEN=s2-admin:s2-admin ;;
          esac
          testspace results.xml printenv.txt "standalone#github.$GITHUB_CHECK_SUITE_ID" --repo=git --build-url=$build_url
        if: always()
        env: # temporary until GH Actions "build-bot" server support provided
          TESTSPACE_TOKEN: ${{ secrets.TESTSPACE_TOKEN }}
          CI_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          CI_COMMIT_MESSAGE_JSON: ${{ toJson(github.event.head_commit.message) }}
